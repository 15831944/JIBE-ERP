using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using SMS.Business.Crew;
using System.Data;
using System.IO;



public partial class Crew_DocumentChecklist : System.Web.UI.Page
{
    BLL_Crew_CrewDetails objCrew = new BLL_Crew_CrewDetails();

    protected void Page_Load(object sender, EventArgs e)
    {
        if (getQueryString("CrewID") == null)
            Response.Redirect("CrewList.aspx");

        if (!IsPostBack)
        {
            try
            {
                int CrewID = int.Parse(getQueryString("CrewID"));

                DataTable dtDocs = objCrew.Get_Crew_DocumentChecklist(CrewID);

                GridView1.DataSource = dtDocs;
                GridView1.DataBind();

                string CrewName = objCrew.Get_CrewPersonalDetailsByID(CrewID, "Staff_FullName");
                lblCrewName.Text = CrewName;
            }
            catch
            {
            }
            //HiddenField_CrewID.Value = getQueryString("CrewID");
            //HiddenField_UserID.Value = GetSessionUserID().ToString();
            //HiddenField_DocumentUploadPath.Value = Server.MapPath("../Uploads/CrewDocuments");
        }
    }

    private string getQueryString(string QueryField)
    {
        try
        {
            if (Request.QueryString[QueryField] != null && Request.QueryString[QueryField].ToString() != "")
            {
                return Request.QueryString[QueryField].ToString();
            }
            else
                return "";
        }
        catch
        {
            return "";
        }
    }

    private int GetSessionUserID()
    {
        if (Session["USERID"] != null)
            return int.Parse(Session["USERID"].ToString());
        else
            return 0;
    }

    protected void GridView1_RowEditing(object sender, GridViewEditEventArgs e)
    {
        try
        {
            GridView1.EditIndex = e.NewEditIndex;
            BindData();

        }
        catch
        {
        }


    }

    protected void GridView1_RowCancelEdit(object sender, GridViewCancelEditEventArgs e)
    {
        try
        {
            GridView1.EditIndex = -1;
            BindData();

        }
        catch
        {
        }


    }

    protected void GridView1_RowUpdating(object sender, GridViewUpdateEventArgs e)
    {
        try
        {

            int CrewID = int.Parse(getQueryString("CrewID"));
            int DocID = 0;
            int DocTypeID;
            string DocName = "";
            string FileName = "";
            string FileExt = "";

            DocTypeID = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value);
            FileUpload file = ((FileUpload)(GridView1.Rows[e.RowIndex].FindControl("docUploader")));
            int AnswarYN = int.Parse(e.NewValues[0].ToString());
            int RankID = int.Parse(e.NewValues[1].ToString());
            string Remark = e.NewValues[2].ToString();
            string DocNo = e.NewValues[3].ToString();
            string IssueDate = e.NewValues[4].ToString();
            string ExpiryDate = e.NewValues[5].ToString();
            string IssuePalce = e.NewValues[6].ToString();

            if (AnswarYN == 1)
            {
                if (ValidateEntry(IssueDate, ExpiryDate) == true)
                {
                    if (file.FileName.Length > 0)//checking if user uploaded any file
                    {
                        Guid GUID = Guid.NewGuid();
                        FileName = file.FileName;
                        FileExt = Path.GetExtension(FileName).ToLower();
                        DocName = FileName.Replace(FileExt, "");
                        FileName = GUID.ToString() + FileExt;

                        file.PostedFile.SaveAs(Server.MapPath("~/Uploads/CrewDocuments/" + FileName));

                        DocID = objCrew.INS_CrewDocuments(CrewID, DocName, FileName, FileExt, DocTypeID, GetSessionUserID(), DocNo, IssueDate, IssuePalce, ExpiryDate);

                        objCrew.UPDATE_DocumentChecklist(CrewID, DocID, DocTypeID, DocName, AnswarYN, RankID, Remark, DocNo, IssueDate, IssuePalce, ExpiryDate, GetSessionUserID(), FileName);

                        GridView1.EditIndex = -1;
                        BindData();
                    }
                    else
                    {
                        string js = "Select Document";
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertUser", "alert('" + js + "');", true);

                        //GridView1.EditIndex = -1;
                        //BindData();

                    }
                }
            }
            else
            {
                objCrew.UPDATE_DocumentChecklist(CrewID, DocID, DocTypeID, DocName, AnswarYN, RankID, Remark, DocNo, IssueDate, IssuePalce, ExpiryDate, GetSessionUserID(), FileName);
                GridView1.EditIndex = -1;
                BindData();
            }

        }
        catch
        {
        }


    }

    protected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            string DocTypeID = DataBinder.Eval(e.Row.DataItem, "DocTypeID").ToString();
            string DocFileName = DataBinder.Eval(e.Row.DataItem, "DocFileName").ToString();

            HyperLink img = (HyperLink)e.Row.FindControl("ImgAttachment");
            if (img != null)
            {
                if (DocFileName != "")
                {
                    img.NavigateUrl = "~/Uploads/CrewDocuments/" + DocFileName;
                    img.Target = "_blank";
                }
                else
                    img.Visible = false;
            }
        }
    }


    protected void BindData()
    {
        int CrewID = int.Parse(getQueryString("CrewID"));
        DataTable dtDocs = objCrew.Get_Crew_DocumentChecklist(CrewID);
        GridView1.DataSource = dtDocs;
        GridView1.DataBind();
    }
    protected Boolean ValidateEntry(string IssueDate, string ExpiryDate)
    {
        Boolean ret = true;
        string msg = "";

        if (IssueDate == "")
        {

            ret = false;
            msg = "Invalid entry in ISSUE DATE field. Please enter in DD/MM/YYYY format";

        }
        if (ExpiryDate == "")
        {

            ret = false;
            msg = "Invalid entry in EXPIRY  DATE field. Please enter in DD/MM/YYYY format";
        }

        if (IssueDate != "")
        {
            try
            {
                DateTime dt = DateTime.Parse(IssueDate);
            }
            catch
            {
                ret = false;
                msg = "Invalid entry in ISSUE DATE field. Please enter in DD/MM/YYYY format";
            }
        }
        if (ExpiryDate != "")
        {
            try
            {
                DateTime dt = DateTime.Parse(ExpiryDate);
            }
            catch
            {
                ret = false;
                msg = "Invalid entry in EXPIRY  DATE field. Please enter in DD/MM/YYYY format";
            }
        }

        if (msg != "")
        {
            string js = "alert('" + msg + "');";
            ScriptManager.RegisterStartupScript(this, this.GetType(), "msg", js, true);
        }
        return ret;
    }
    
    public void SendMail(string To, string CC, string From, string Sub, string MailBody, string AttachmentPath)
    {
    }

}